fragment_downloaded_cb({"url":"docs/coding-convention.html#page-description","fragment":"You may indent differently from what clang-format does. You may also break the 80-column rule with header files.\nExcept the two, you are required to follow the general coding styles mandated by clang-format.\nUse .h for headers and .cpp / .c for source.\nYou have to use clang-format with the given .clang-format file\n\n[Java] TBD\n[Python] TBD\n[Bash] TBD\n\n\n\napi: API definitions and implementations\n\n\ncapi: C-APIs (Tizen and others)\n\n\n\ndebian: Debian/Ubuntu packaging files\n\ndocs: Documentations\n\nnntrainer: All core NNTrainer codes are located here\n\nnnstreamer: NNStreamer sub-filter codes for NNTrainer\n\njni: Android/Java build scripts.\n\nApplications: Examples for NNtrainer\n\npackaging: Tizen RPM build scripts. OpenSUSE/Redhat Linux may reuse this.\n\ntest: Unit test cases. We have GTEST test cases. There are subdirectories, which are groups of unit test cases.\n\ntools: Various developmental tools and scripts of NNTrainer.\n\n\n\ncapi: C-APIs (Tizen and others)\n\n\nNNStreamer\nTAOS-CI, CI Service for On-Device AI Systems\n\n"});