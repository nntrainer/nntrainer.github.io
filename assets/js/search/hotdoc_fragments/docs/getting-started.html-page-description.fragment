fragment_downloaded_cb({"url":"docs/getting-started.html#page-description","fragment":"The following dependencies are needed to compile/build/run.\nThe NNTrainer releases are available with launchpad PPA repository. In order to install it, use:\nUse the NNStreamer PPA to resolve additional build-dependencies (Tensorflow/Tensorflow-Lite).\nInstall build tools:\nThe following example configuration is for Ubuntu 18.04:\nRun pdebuild to build and get the package.\nRefer to PbuilderHowto for more about pdebuild.\nAlternatively, you may simply download binary packages from PPA:\nIf there is a missing package, debuild will tell you which package is missing.\nIf you haven't configured debuild properly, yet, you will need to add -uc -us options to debuild.\nThe files will be there at the parent dir. Eg. at nnbuilder/.. directory.\nIn order to install them (should run as root):\nIf you need nntrainer development package:\nAdd nnstreamer ppa for some of the dependencies.\nInstall the required packages.\nBuild at the git repo root directory, this will install nntrainer and related files.\nGet GBS from https://source.tizen.org/documentation/reference/git-build-system/usage/gbs-build\nFirst install the required packages.\nGenerates .rpm packages:\ngbs build will execute unit testing as well unlike meson build.\nsudo apt install libflatbuffers-dev\n\ngcc/g++ >=4.9 ( std=c++14 is used )\nmeson >= 0.50\nlibopenblas-dev and base\ntensorflow-lite >=1.14.0\nlibiniparser\nlibjsoncpp >=0.6.0 ( if you wand to use open AI )\nlibcurl3 >=7.47 ( if you wand to use open AI )\nlibgtest ( for testing )\n\n\nInstalls libraries to {prefix}/{libdir}\n\nInstalls common header files to {prefix}/{includedir}\n\n\n"});